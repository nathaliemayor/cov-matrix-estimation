coord_cartesian(expand = F) +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods")
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
),
aes(x = sd, y = returns)) +
geom_point() +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods")
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
),
aes(x = sd, y = returns)) +
geom_density2d_filled(show.legend = F) +
coord_cartesian(expand = F) +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods")
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
) %>% filter(!method %in% c(11,13)),
aes(x = sd, y = returns)) +
geom_density2d_filled(show.legend = F) +
coord_cartesian(expand = F) +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods")
df<-data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
)
mean(df$returns)
mean(df$sd)
df<-  data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
) %>% filter(!method %in% c(11,13))
mean(df$returns)
mean(df$sd)
# cov_est_method <- "sample"
test_rolling_bootstrap <- pmap(
crossing(stock_returns, roll),
get_portfolio_metrics,
cov_est_method = "equal_weights",
portfolio_optimization = "tangent",
short = TRUE,
factor_returns = factors
)
names(test_rolling_bootstrap) <- rep(
1:n_bootstraps,
each=length(roll)
)
results_by_bootstrap <- lapply(
seq(1,(n_bootstraps-1)*length(roll)+1, length(roll)),
function(x)
test_rolling_bootstrap[x:(x+length(roll)-1)]
)
names(results_by_bootstrap) <- 1:n_bootstraps
all_avg_returns_bootstrap <- lapply(1:n_bootstraps, function(x)
results_by_bootstrap[[x]] %>%
map_depth(1,1) %>%
reduce(rbind) %>%
filter(!is.na(returns)) %>%
summarise(mean = mean(returns))
) %>%
unlist %>%
reduce(append)
all_avg_sd_bootstrap <- lapply(1:n_bootstraps, function(x)
results_by_bootstrap[[x]] %>%
map_depth(1,2) %>%
reduce(append) %>%
na.omit %>%
mean) %>%
reduce(append)
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
),
aes(x = sd, y = returns)) +
geom_point() +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods")
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
) %>% filter(!method %in% c(11,13)),
aes(x = sd, y = returns)) +
geom_density2d_filled(show.legend = F) +
coord_cartesian(expand = F) +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods")
df<-  data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
) %>% filter(!method %in% c(11,13))
mean(df$returns)
mean(df$sd)
# cov_est_method <- "sample"
test_rolling_bootstrap <- pmap(
crossing(stock_returns, roll),
get_portfolio_metrics,
cov_est_method = "factor1",
portfolio_optimization = "tangent",
short = TRUE,
factor_returns = factors
)
names(test_rolling_bootstrap) <- rep(
1:n_bootstraps,
each=length(roll)
)
results_by_bootstrap <- lapply(
seq(1,(n_bootstraps-1)*length(roll)+1, length(roll)),
function(x)
test_rolling_bootstrap[x:(x+length(roll)-1)]
)
names(results_by_bootstrap) <- 1:n_bootstraps
all_avg_returns_bootstrap <- lapply(1:n_bootstraps, function(x)
results_by_bootstrap[[x]] %>%
map_depth(1,1) %>%
reduce(rbind) %>%
filter(!is.na(returns)) %>%
summarise(mean = mean(returns))
) %>%
unlist %>%
reduce(append)
all_avg_sd_bootstrap <- lapply(1:n_bootstraps, function(x)
results_by_bootstrap[[x]] %>%
map_depth(1,2) %>%
reduce(append) %>%
na.omit %>%
mean) %>%
reduce(append)
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
),
aes(x = sd, y = returns)) +
geom_point() +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Bootstrapped tangent portfolios for a given estimation method")
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
) %>% filter(!method %in% c(11,13)),
aes(x = sd, y = returns)) +
geom_density2d_filled(show.legend = F) +
coord_cartesian(expand = F) +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods")
df<-  data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
) %>% filter(!method %in% c(11,13))
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
) %>% filter(!method %in% c(16)),
aes(x = sd, y = returns)) +
geom_density2d_filled(show.legend = F) +
coord_cartesian(expand = F) +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods")
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
) %>% filter(!method %in% c(1,16)),
aes(x = sd, y = returns)) +
geom_density2d_filled(show.legend = F) +
coord_cartesian(expand = F) +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods")
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
) %>% filter(!method %in% c(1,16,7)),
aes(x = sd, y = returns)) +
geom_density2d_filled(show.legend = F) +
coord_cartesian(expand = F) +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods")
# ------------------------------------------------------------------------------
#                 BOOTSTRAPPED PORTFOLIO DATA
# ------------------------------------------------------------------------------
n_bootstraps <- 1000
stock_returns <- bootstrapped_portfolios(ff100_data$monthly, n_bootstraps)
get_portfolio_metrics(stock_returns = stock_returns[[1]], cov_est_method = "sample",
roll = 1, portfolio_optimization = "tangent")
# cov_est_method <- "sample"
test_rolling_bootstrap <- pmap(
crossing(stock_returns, roll),
get_portfolio_metrics,
cov_est_method = "factor1",
portfolio_optimization = "tangent",
short = TRUE,
factor_returns = factors
)
names(test_rolling_bootstrap) <- rep(
1:n_bootstraps,
each=length(roll)
)
results_by_bootstrap <- lapply(
seq(1,(n_bootstraps-1)*length(roll)+1, length(roll)),
function(x)
test_rolling_bootstrap[x:(x+length(roll)-1)]
)
names(results_by_bootstrap) <- 1:n_bootstraps
all_avg_returns_bootstrap <- lapply(1:n_bootstraps, function(x)
results_by_bootstrap[[x]] %>%
map_depth(1,1) %>%
reduce(rbind) %>%
filter(!is.na(returns)) %>%
summarise(mean = mean(returns))
) %>%
unlist %>%
reduce(append)
all_avg_sd_bootstrap <- lapply(1:n_bootstraps, function(x)
results_by_bootstrap[[x]] %>%
map_depth(1,2) %>%
reduce(append) %>%
na.omit %>%
mean) %>%
reduce(append)
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
),
aes(x = sd, y = returns)) +
geom_point() +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Bootstrapped tangent portfolios for a given estimation method")
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
) %>% filter(!method %in% c(1,16,7)),
aes(x = sd, y = returns)) +
geom_density2d_filled(show.legend = F) +
coord_cartesian(expand = F) +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods")
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
) %>% filter(!method %in% c(50,995,257,46,136,140,127)),
aes(x = sd, y = returns)) +
geom_density2d_filled(show.legend = F) +
coord_cartesian(expand = F) +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods")
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
) %>% filter(!method %in% c(50,995,257,46,136,140,127,7,286,563,16)),
aes(x = sd, y = returns)) +
geom_density2d_filled(show.legend = F) +
coord_cartesian(expand = F) +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods")
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
) %>% filter(!method %in% c(50,995,257,46,136,140,127,7,286,563,16,1000,827,145,540,567,1)),
aes(x = sd, y = returns)) +
geom_density2d_filled(show.legend = F) +
coord_cartesian(expand = F) +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods")
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
) %>% filter(!method %in% c(50,995,257,46,136,140,127,7,286,563,16,1000,827,145,540,567,1,840)),
aes(x = sd, y = returns)) +
geom_density2d_filled(show.legend = F) +
coord_cartesian(expand = F) +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods")
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
) %>% filter(!method %in% c(50,995,257,46,136,140,127,7,286,563,16,1000,827,145,540,567,1,840)),
aes(x = sd, y = returns)) +
geom_density2d_filled(show.legend = F) +
coord_cartesian(expand = F) +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods") +
xlim(c(0,30)) +
ylim(c(-5,5))
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
) %>% filter(!method %in% c(50,995,257,46,136,140,127,7,286,563,16,1000,827,145,540,567,1,840)),
aes(x = sd, y = returns)) +
geom_density2d_filled(show.legend = F) +
coord_cartesian(expand = F) +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods") +
xlim(c(0,20)) +
ylim(c(-2,4))
ggplot(
data_frame(
method = 1:n_bootstraps,
returns = all_avg_returns_bootstrap,
sd = all_avg_sd_bootstrap
) %>% filter(!method %in% c(50,995,257,46,136,140,127,7,286,563,16,1000,827,145,540,567,1,840)),
aes(x = sd, y = returns)) +
geom_density2d_filled(show.legend = F) +
coord_cartesian(expand = F) +
geom_label_repel(
aes(label = method),
box.padding = 1,
point.padding = 1,
segment.color = "grey",
color = "darkgreen"
) +
theme_hsg() +
# xlim(c(11,24)) +
ggtitle("Tangent portfolios with various covariance matrix estimation methods") +
xlim(c(0,10)) +
ylim(c(0,2))
